// Code generated by MockGen. DO NOT EDIT.
// Source: ./filter.go

// Package shimagent is a generated GoMock package.
package shimagent

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ssh "golang.org/x/crypto/ssh"
)

// MockhelperShimAgentServer is a mock of helperShimAgentServer interface.
type MockhelperShimAgentServer struct {
	ctrl     *gomock.Controller
	recorder *MockhelperShimAgentServerMockRecorder
}

// MockhelperShimAgentServerMockRecorder is the mock recorder for MockhelperShimAgentServer.
type MockhelperShimAgentServerMockRecorder struct {
	mock *MockhelperShimAgentServer
}

// NewMockhelperShimAgentServer creates a new mock instance.
func NewMockhelperShimAgentServer(ctrl *gomock.Controller) *MockhelperShimAgentServer {
	mock := &MockhelperShimAgentServer{ctrl: ctrl}
	mock.recorder = &MockhelperShimAgentServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockhelperShimAgentServer) EXPECT() *MockhelperShimAgentServerMockRecorder {
	return m.recorder
}

// remove mocks base method.
func (m *MockhelperShimAgentServer) remove(arg0 ssh.PublicKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "remove", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// remove indicates an expected call of remove.
func (mr *MockhelperShimAgentServerMockRecorder) remove(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "remove", reflect.TypeOf((*MockhelperShimAgentServer)(nil).remove), arg0)
}
